{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\GitRepo\\\\20-MultipageWithReactRouter\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Detail Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(P, {\n      children: params.quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useParams","QuoteDetail","params","quoteId"],"sources":["D:/React/GitRepo/20-MultipageWithReactRouter/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams();\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Quote Detail Page</h1>\r\n            <P>{params.quoteId}</P>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;EAEA,oBACI,QAAC,QAAD;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,CAAD;MAAA,UAAIE,MAAM,CAACC;IAAX;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CATD;;GAAMF,W;UACaD,S;;;KADbC,W;AAWN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}